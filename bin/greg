#!/usr/bin/env php
<?php
# ---------------------------
#      ▄▄  ▄▄▄   ▄▄   ▄▄
#     █  █ █  ▀ █▄▄█ █  █
#     ▀▄▄█ █    ▀▄▄▄ ▀▄▄█
#     ▄▄▄▀           ▄▄▄▀
# ---------------------------
# Greg Regularly Evokes Goals

$config = require_once dirname(__DIR__) . '/init.php';
$greg = new \Greg\Greg($config);
$client = new \Greg\Client($greg);

$arg_rules = [
    'table|t' => 'Show list as table',
    'version|v' => 'Show version',
    'help|h' => 'Show help',
    'arg:command' => 'Command',
];
$arguments = new Qi_Console_ArgV($argv, $arg_rules);

if ($arguments->help) {
    exit($client->help());
}

if ($arguments->version) {
    printf("Greg version %s\n", \Greg\Greg::VERSION);
    exit(0);
}

switch ($arguments->command) {
case '': // passthru
case 'list':
    $return = $client->list($arguments->table);
    break;
case 'add':
    $return = $client->add($argv);
    break;
case 'remind':
    $return = $client->remind();
    break;
case 'progress':
    $return = $client->progress($argv);
    break;
case 'detail':
    $return = $client->detail($argv);
    break;
case 'complete':
    $return = $client->complete($argv);
    break;
case 'help':
    $return = $client->help();
    break;
case 'version':
    printf("Greg version %s\n", \Greg\Greg::VERSION);
    $return = 0;
    break;
default:
    printf("Unrecognized command '%s'\n", $arguments->command);
    $return = $client->help();
    break;
}

exit($return);
